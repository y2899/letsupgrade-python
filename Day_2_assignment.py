# -*- coding: utf-8 -*-
"""Day 2 Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N5DuUuhPofsRoMC5oqqji50CLHPo8N9h
"""



"""AGENDA OF DAY 2 ASSIGNMENT:
1.Basic python syntax:
 *Backslash.
 eg:print("hello \
 python)
 o/p:hello  python
 *Triple quotes.
 eg:('''   ''')designs can be printed in between triple quotes.
 *string inside the quotes.
 eg:("python's world")o/p:python's world
 *Escape sequence of string.
 Name="xyz"
 Marks="90"
 Age="20"
 print("The name of the person is",Name,"marks is",Marks,"age is",Age)
 o/p:The name of the person is xyz marks is 90 age i 20.
 *Formatted output.
 print("the name of person is %s marks is %f age is %d "%(name,marks,age).

 2.Python Variables and Assignment Statements:
 Python variables.
 *variable means linking of data to a name.
 *According to the datatype,the interpreter reserves the memory space.
 *variable refers to the memory location tht contains data.

 Rules to define a variable:
 *A keyword cannot be used as a variable.
 *A variable can use letters (both uppercase or lower case)numbers and underscore.
 *A variable cannot start with a number. 
 *python is case sensitive thus variables is also case sensitive.

  python assignment statement:
  <variable name>=<data> example
  x=y=z=10

  important points;
  *operators in the same box have same precedance.
  *operators in the same box group left to right.
  *exponentiation,which groups from right to left.

  Types of operators:

  *ARITHMETIC OPERATORS:+	Addition	x + y	
-	Subtraction	x - y	
*	Multiplication	x * y	
/	Division	x / y	
%	Modulus	x % y	
**	Exponentiation	x ** y	
//	Floor division	x // y	

 *ASSIGNMENT OPERATORS:=	x = 5	x = 5	
+=	x += 3	x = x + 3	
-=	x -= 3	x = x - 3	
*=	x *= 3	x = x * 3	
/=	x /= 3	x = x / 3	
%=	x %= 3	x = x % 3	
//=	x //= 3	x = x // 3	
**=	x **= 3	x = x ** 3

  *COMPARISON OPERATORS:==	Equal	x == y	
!=	Not equal	x != y	
>	Greater than	x > y	
<	Less than	x < y	
>=	Greater than or equal to	x >= y	
<=	Less than or equal to	x <= y

  *LOGICAL OPERATORS:and 	Returns True if both statements are true	x < 5 and  x < 10	
or	Returns True if one of the statements is true	x < 5 or x < 4	
not	Reverse the result, returns False if the result is true	not(x < 5 and x < 10)

  *IDENTITIY OPERATORS:is 	Returns True if both variables are the same object	x is y	
is not	Returns True if both variables are not the same object	x is not y

 *MEMBERSHIP OPERATORS:n 	Returns True if a sequence with the specified value is present in the object	x in y	
not in	Returns True if a sequence with the specified value is not present in the object	x not in y

  *BITWISE OPERATORS:& 1.	AND	Sets each bit to 1 if both bits are 1
2.|	OR	Sets each bit to 1 if one of two bits is 1
3.^	XOR	Sets each bit to 1 if only one of two bits is 1
4.~ 	NOT	Inverts all the bits
5.<<	Zero fill left shift	Shift left by pushing zeros in from the right and let the leftmost bits fall off
6.>>	Signed right shift	Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off

OPERATORS PRCEDANCE:1.**	Exponentiation (raise to the power)
 2.~ + -	Complement, unary plus and minus (method names for the last two are +@ and -@)
 3.* / % //	Multiply, divide, modulo and floor division
 4.+ -	Addition and subtraction
 5.>> <<	Right and left bitwise shift
 6.&	Bitwise 'AND'td>
 7.^ |	Bitwise exclusive `OR' and regular `OR'
 8.<= < > >=	Comparison operators
 9.<> == !=	Equality operators
 10.= %= /= //= -= += *= **=	Assignment operators
 11.is is not	Identity operators
 12.in not in	Membership operators
 13.not or and	Logical operators based on highest to lowest.
"""



